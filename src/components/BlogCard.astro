---
interface Props {
  post: {
    slug: string;
    entry: {
      title: string;
      description: string;
      publishedDate: string;
      featured?: boolean;
      author: string;
      image?: string;
      tags?: string[];
    };
  };
}

const { post } = Astro.props;
const { slug, entry } = post;

// Calculate reading time (more accurate)
const readingTime = Math.ceil((entry.description || '').split(' ').length / 200); // 200 words per minute

// Format date
const publishedDate = new Date(entry.publishedDate);
---

<article 
  class="bg-white border border-gray-200 rounded-xl shadow-sm hover:shadow-xl transition-all duration-300 group cursor-pointer overflow-hidden"
  data-tags={JSON.stringify(entry.tags || [])}
>
  <a href={`/blog/${slug}`} class="block">
    <!-- Featured Image -->
    <div class="aspect-[16/9] overflow-hidden">
      <img
        src={entry.image || '/images/posts/default-placeholder.svg'}
        alt={entry.title}
        class="w-full h-full object-cover group-hover:scale-105 transition-transform duration-500"
        loading="lazy"
        onerror="this.src='/images/posts/default-placeholder.svg'"
      />
    </div>
    
    <div class="p-6">
      <!-- Article Header -->
      <header class="mb-4">
        <div class="flex items-center gap-2 mb-3">
          <time 
            class="text-sm text-gray-500 font-medium"
            datetime={entry.publishedDate}
          >
            {publishedDate.toLocaleDateString('en-US', {
              year: 'numeric',
              month: 'short',
              day: 'numeric'
            })}
          </time>
          {entry.featured && (
            <span class="bg-blue-100 text-blue-800 text-xs font-semibold px-2 py-1 rounded-full">
              Featured
            </span>
          )}
          <span class="text-gray-400">â€¢</span>
          <span class="text-sm text-gray-500">{readingTime} min read</span>
        </div>
        
        <h3 class="text-xl font-bold text-gray-900 group-hover:text-blue-600 transition-colors duration-200 line-clamp-2">
          {entry.title}
        </h3>
      </header>

      <!-- Article Description -->
      <section class="mb-4">
        <p class="text-gray-600 line-clamp-3 leading-relaxed">
          {entry.description || 'No description available'}
        </p>
      </section>

      <!-- Article Footer -->
      <footer class="flex items-center justify-between pt-4 border-t border-gray-100">
        <div class="flex flex-wrap gap-2">
          {entry.tags?.slice(0, 2).map((tag) => (
            <span class="bg-gray-100 text-gray-700 text-xs font-medium px-2 py-1 rounded-md hover:bg-gray-200 transition-colors">
              {tag}
            </span>
          ))}
          {entry.tags && entry.tags.length > 2 && (
            <span class="text-xs text-gray-500">+{entry.tags.length - 2} more</span>
          )}
        </div>
        
        <div class="flex items-center gap-2 text-sm text-gray-500">
          <span class="font-medium">{entry.author}</span>
        </div>
      </footer>
    </div>
  </a>
</article>

<style>
  .line-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>